[2022-10-07T09:23:27.651+0000] {taskinstance.py:1171} INFO - Dependencies all met for <TaskInstance: vecap_etl.date_dim manual__2022-10-07T09:23:25.739044+00:00 [queued]>
[2022-10-07T09:23:27.669+0000] {taskinstance.py:1171} INFO - Dependencies all met for <TaskInstance: vecap_etl.date_dim manual__2022-10-07T09:23:25.739044+00:00 [queued]>
[2022-10-07T09:23:27.671+0000] {taskinstance.py:1368} INFO - 
--------------------------------------------------------------------------------
[2022-10-07T09:23:27.673+0000] {taskinstance.py:1369} INFO - Starting attempt 1 of 1
[2022-10-07T09:23:27.674+0000] {taskinstance.py:1370} INFO - 
--------------------------------------------------------------------------------
[2022-10-07T09:23:27.699+0000] {taskinstance.py:1389} INFO - Executing <Task(PostgresOperator): date_dim> on 2022-10-07 09:23:25.739044+00:00
[2022-10-07T09:23:27.707+0000] {standard_task_runner.py:52} INFO - Started process 35022 to run task
[2022-10-07T09:23:27.713+0000] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'vecap_etl', 'date_dim', 'manual__2022-10-07T09:23:25.739044+00:00', '--job-id', '235', '--raw', '--subdir', 'DAGS_FOLDER/c_dag.py', '--cfg-path', '/tmp/tmpe_ufgim7', '--error-file', '/tmp/tmpv0epxu9t']
[2022-10-07T09:23:27.716+0000] {standard_task_runner.py:80} INFO - Job 235: Subtask date_dim
[2022-10-07T09:23:27.831+0000] {task_command.py:371} INFO - Running <TaskInstance: vecap_etl.date_dim manual__2022-10-07T09:23:25.739044+00:00 [running]> on host a41ad1c55a2c
[2022-10-07T09:23:27.984+0000] {taskinstance.py:1583} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=admin@vecap.com
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=vecap_etl
AIRFLOW_CTX_TASK_ID=date_dim
AIRFLOW_CTX_EXECUTION_DATE=2022-10-07T09:23:25.739044+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-10-07T09:23:25.739044+00:00
[2022-10-07T09:23:28.000+0000] {base.py:68} INFO - Using connection ID 'vecap_target' for task execution.
[2022-10-07T09:23:29.280+0000] {sql.py:315} INFO - Running statement: INSERT INTO rccghge.date_dim
            SELECT TO_CHAR(datum, 'yyyymmdd')::INT AS date_key,
                datum AS date_actual,
                EXTRACT(EPOCH FROM datum) AS epoch,
                TO_CHAR(datum, 'fmDDth') AS day_suffix,
                TO_CHAR(datum, 'TMDay') AS day_name,
                EXTRACT(ISODOW FROM datum) AS day_of_week,
                EXTRACT(DAY FROM datum) AS day_of_month,
                datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter,
                EXTRACT(DOY FROM datum) AS day_of_year,
                TO_CHAR(datum, 'W')::INT AS week_of_month,
                EXTRACT(WEEK FROM datum) AS week_of_year,
                EXTRACT(ISOYEAR FROM datum) || TO_CHAR(datum, '"-W"IW-') || EXTRACT(ISODOW FROM datum) AS week_of_year_iso,
                EXTRACT(MONTH FROM datum) AS month_actual,
                TO_CHAR(datum, 'TMMonth') AS month_name,
                TO_CHAR(datum, 'Mon') AS month_name_abbreviated,
                EXTRACT(QUARTER FROM datum) AS quarter_actual,
                CASE
                    WHEN EXTRACT(QUARTER FROM datum) = 1 THEN 'First'
                    WHEN EXTRACT(QUARTER FROM datum) = 2 THEN 'Second'
                    WHEN EXTRACT(QUARTER FROM datum) = 3 THEN 'Third'
                    WHEN EXTRACT(QUARTER FROM datum) = 4 THEN 'Fourth'
                    END AS quarter_name,
                EXTRACT(YEAR FROM datum) AS year_actual,
                datum + (1 - EXTRACT(ISODOW FROM datum))::INT AS first_day_of_week,
                datum + (7 - EXTRACT(ISODOW FROM datum))::INT AS last_day_of_week,
                datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month,
                (DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month,
                DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter,
                (DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year,
                TO_CHAR(datum, 'mmyyyy') AS mmyyyy,
                TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy,
                CASE
                    WHEN EXTRACT(ISODOW FROM datum) IN (6, 7) THEN TRUE
                    ELSE FALSE
                    END AS weekend_indr
            FROM (SELECT '2020-01-01'::DATE + SEQUENCE.DAY AS datum
                FROM GENERATE_SERIES(0, 29219) AS SEQUENCE (DAY)
                GROUP BY SEQUENCE.DAY) DQ
            ORDER BY 1;
            COMMIT, parameters: None
[2022-10-07T09:23:30.481+0000] {postgres.py:94} INFO - WARNING:  there is no transaction in progress

[2022-10-07T09:23:30.501+0000] {taskinstance.py:1412} INFO - Marking task as SUCCESS. dag_id=vecap_etl, task_id=date_dim, execution_date=20221007T092325, start_date=20221007T092327, end_date=20221007T092330
[2022-10-07T09:23:30.550+0000] {local_task_job.py:156} INFO - Task exited with return code 0
