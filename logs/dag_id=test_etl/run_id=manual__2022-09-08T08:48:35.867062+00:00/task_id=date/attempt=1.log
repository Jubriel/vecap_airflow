[2022-09-08T08:48:37.973+0000] {taskinstance.py:1171} INFO - Dependencies all met for <TaskInstance: test_etl.date manual__2022-09-08T08:48:35.867062+00:00 [queued]>
[2022-09-08T08:48:37.993+0000] {taskinstance.py:1171} INFO - Dependencies all met for <TaskInstance: test_etl.date manual__2022-09-08T08:48:35.867062+00:00 [queued]>
[2022-09-08T08:48:37.994+0000] {taskinstance.py:1368} INFO - 
--------------------------------------------------------------------------------
[2022-09-08T08:48:37.996+0000] {taskinstance.py:1369} INFO - Starting attempt 1 of 1
[2022-09-08T08:48:37.997+0000] {taskinstance.py:1370} INFO - 
--------------------------------------------------------------------------------
[2022-09-08T08:48:38.020+0000] {taskinstance.py:1389} INFO - Executing <Task(PythonOperator): date> on 2022-09-08 08:48:35.867062+00:00
[2022-09-08T08:48:38.030+0000] {standard_task_runner.py:52} INFO - Started process 35092 to run task
[2022-09-08T08:48:38.037+0000] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'test_etl', 'date', 'manual__2022-09-08T08:48:35.867062+00:00', '--job-id', '25', '--raw', '--subdir', 'DAGS_FOLDER/test_dag.py', '--cfg-path', '/tmp/tmp42mk797x', '--error-file', '/tmp/tmpm031eb5v']
[2022-09-08T08:48:38.041+0000] {standard_task_runner.py:80} INFO - Job 25: Subtask date
[2022-09-08T08:48:38.156+0000] {task_command.py:371} INFO - Running <TaskInstance: test_etl.date manual__2022-09-08T08:48:35.867062+00:00 [running]> on host 0edf5f972c6d
[2022-09-08T08:48:38.297+0000] {taskinstance.py:1583} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=admin@vecap.com
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=test_etl
AIRFLOW_CTX_TASK_ID=date
AIRFLOW_CTX_EXECUTION_DATE=2022-09-08T08:48:35.867062+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-09-08T08:48:35.867062+00:00
[2022-09-08T08:48:43.452+0000] {taskinstance.py:1902} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1803, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 719, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint "date_dim_pk"
DETAIL:  Key (date_key)=(20200101) already exists.


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 171, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 189, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/ETL_1.py", line 62, in date_dim
    return db_target_conn.execute(sql)
  File "<string>", line 2, in execute
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py", line 401, in warned
    return fn(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 3139, in execute
    return connection.execute(statement, *multiparams, **params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1289, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 326, in _execute_on_connection
    self, multiparams, params, execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1491, in _execute_clauseelement
    cache_hit=cache_hit,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2027, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1803, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 719, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.IntegrityError: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "date_dim_pk"
DETAIL:  Key (date_key)=(20200101) already exists.

[SQL: INSERT INTO rccghge.date_dim
            SELECT TO_CHAR(datum, 'yyyymmdd')::INT AS date_key,
                datum AS date_actual,
                EXTRACT(EPOCH FROM datum) AS epoch,
                TO_CHAR(datum, 'fmDDth') AS day_suffix,
                TO_CHAR(datum, 'TMDay') AS day_name,
                EXTRACT(ISODOW FROM datum) AS day_of_week,
                EXTRACT(DAY FROM datum) AS day_of_month,
                datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter,
                EXTRACT(DOY FROM datum) AS day_of_year,
                TO_CHAR(datum, 'W')::INT AS week_of_month,
                EXTRACT(WEEK FROM datum) AS week_of_year,
                EXTRACT(ISOYEAR FROM datum) || TO_CHAR(datum, '"-W"IW-') || EXTRACT(ISODOW FROM datum) AS week_of_year_iso,
                EXTRACT(MONTH FROM datum) AS month_actual,
                TO_CHAR(datum, 'TMMonth') AS month_name,
                TO_CHAR(datum, 'Mon') AS month_name_abbreviated,
                EXTRACT(QUARTER FROM datum) AS quarter_actual,
                CASE
                    WHEN EXTRACT(QUARTER FROM datum) = 1 THEN 'First'
                    WHEN EXTRACT(QUARTER FROM datum) = 2 THEN 'Second'
                    WHEN EXTRACT(QUARTER FROM datum) = 3 THEN 'Third'
                    WHEN EXTRACT(QUARTER FROM datum) = 4 THEN 'Fourth'
                    END AS quarter_name,
                EXTRACT(YEAR FROM datum) AS year_actual,
                datum + (1 - EXTRACT(ISODOW FROM datum))::INT AS first_day_of_week,
                datum + (7 - EXTRACT(ISODOW FROM datum))::INT AS last_day_of_week,
                datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month,
                (DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month,
                DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter,
                (DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year,
                TO_CHAR(datum, 'mmyyyy') AS mmyyyy,
                TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy,
                CASE
                    WHEN EXTRACT(ISODOW FROM datum) IN (6, 7) THEN TRUE
                    ELSE FALSE
                    END AS weekend_indr
            FROM (SELECT '2020-01-01'::DATE + SEQUENCE.DAY AS datum
                FROM GENERATE_SERIES(0, 29219) AS SEQUENCE (DAY)
                GROUP BY SEQUENCE.DAY) DQ
            ORDER BY 1;
            COMMIT;]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
[2022-09-08T08:48:43.471+0000] {taskinstance.py:1412} INFO - Marking task as FAILED. dag_id=test_etl, task_id=date, execution_date=20220908T084835, start_date=20220908T084837, end_date=20220908T084843
[2022-09-08T08:48:43.487+0000] {standard_task_runner.py:97} ERROR - Failed to execute job 25 for task date ((psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "date_dim_pk"
DETAIL:  Key (date_key)=(20200101) already exists.

[SQL: INSERT INTO rccghge.date_dim
            SELECT TO_CHAR(datum, 'yyyymmdd')::INT AS date_key,
                datum AS date_actual,
                EXTRACT(EPOCH FROM datum) AS epoch,
                TO_CHAR(datum, 'fmDDth') AS day_suffix,
                TO_CHAR(datum, 'TMDay') AS day_name,
                EXTRACT(ISODOW FROM datum) AS day_of_week,
                EXTRACT(DAY FROM datum) AS day_of_month,
                datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter,
                EXTRACT(DOY FROM datum) AS day_of_year,
                TO_CHAR(datum, 'W')::INT AS week_of_month,
                EXTRACT(WEEK FROM datum) AS week_of_year,
                EXTRACT(ISOYEAR FROM datum) || TO_CHAR(datum, '"-W"IW-') || EXTRACT(ISODOW FROM datum) AS week_of_year_iso,
                EXTRACT(MONTH FROM datum) AS month_actual,
                TO_CHAR(datum, 'TMMonth') AS month_name,
                TO_CHAR(datum, 'Mon') AS month_name_abbreviated,
                EXTRACT(QUARTER FROM datum) AS quarter_actual,
                CASE
                    WHEN EXTRACT(QUARTER FROM datum) = 1 THEN 'First'
                    WHEN EXTRACT(QUARTER FROM datum) = 2 THEN 'Second'
                    WHEN EXTRACT(QUARTER FROM datum) = 3 THEN 'Third'
                    WHEN EXTRACT(QUARTER FROM datum) = 4 THEN 'Fourth'
                    END AS quarter_name,
                EXTRACT(YEAR FROM datum) AS year_actual,
                datum + (1 - EXTRACT(ISODOW FROM datum))::INT AS first_day_of_week,
                datum + (7 - EXTRACT(ISODOW FROM datum))::INT AS last_day_of_week,
                datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month,
                (DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month,
                DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter,
                (DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year,
                TO_DATE(EXTRACT(YEAR FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year,
                TO_CHAR(datum, 'mmyyyy') AS mmyyyy,
                TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy,
                CASE
                    WHEN EXTRACT(ISODOW FROM datum) IN (6, 7) THEN TRUE
                    ELSE FALSE
                    END AS weekend_indr
            FROM (SELECT '2020-01-01'::DATE + SEQUENCE.DAY AS datum
                FROM GENERATE_SERIES(0, 29219) AS SEQUENCE (DAY)
                GROUP BY SEQUENCE.DAY) DQ
            ORDER BY 1;
            COMMIT;]
(Background on this error at: https://sqlalche.me/e/14/gkpj); 35092)
[2022-09-08T08:48:43.543+0000] {local_task_job.py:156} INFO - Task exited with return code 1
[2022-09-08T08:48:43.584+0000] {local_task_job.py:279} INFO - 0 downstream tasks scheduled from follow-on schedule check
